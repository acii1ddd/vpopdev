scope: patroni
namespace: /service/

restapi:
  # слушает на этом порту на всех интерфейсах
  listen: 0.0.0.0:8008 
  # публикуется в dcs, чтобы другие в кластере могли обращаться к этому patroni
  connect_address: ${PATRONI_RESTAPI_CONNECT_ADDRESS}

bootstrap:
  dcs:
    ttl: 30
    loop_wait: 10
    maximum_lag_on_failover: 1048576
    postgresql:
      use_pg_rewind: true

  postgresql:
    use_pg_rewind: true
    parameters:
      wal_level: replica
      max_wal_senders: 10
      max_replication_slots: 10
      hot_standby: "on"

  initdb:
  - encoding: UTF8
  - data-checksums

  pg_hba:
  - host replication all all md5
  - host all all all md5

etcd3:
  hosts:
  - etcd:2379

postgresql:
  listen: 0.0.0.0:5432
  data_dir: /var/lib/postgresql/patroni/main
  bin_dir: /usr/lib/postgresql/17/bin
  pgpass: /tmp/pgpass0
  parameters:
    unix_socket_directories: /var/run/postgresql
    
  # slots:
  #   patroni-1:
  #     type: physical
  #   patroni-3:
  #     type: physical

# authentication:
#   replication:
#     username: ${PATRONI_REPLICATION_USERNAME}
#     password: ${PATRONI_REPLICATION_PASSWORD}
#   superuser:
#     username: ${PATRONI_SUPERUSER_USERNAME}
#     password: ${PATRONI_SUPERUSER_PASSWORD}

# защита от split-brain - когда 2 ноты из-за сбоя считают себя мастером
watchdog:
 mode: off

tags:
  nofailover: false
  noloadbalance: false
  clonefrom: false
  nosync: false